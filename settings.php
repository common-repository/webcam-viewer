<?php// Crea la pagina impostazioni /** * Generated by the WordPress Option Page generator * at http://jeremyhixon.com/wp-tools/option-page/ */// If this file is called directly, abort.if ( ! defined( 'WPINC' ) ) {	die;}class WebcamViewerSettings {	private $webcam_viewer_settings_options;	public function __construct() {		add_action( 'admin_menu', array( $this, 'webcam_viewer_settings_add_plugin_page' ) );		add_action( 'admin_init', array( $this, 'webcam_viewer_settings_page_init' ) );	}	public function webcam_viewer_settings_add_plugin_page() {		add_menu_page(			'Webcam viewer settings', // page_title			'Webcam viewer settings', // menu_title			'manage_options', // capability			'webcam-viewer-settings', // menu_slug			array( $this, 'webcam_viewer_settings_create_admin_page' ), // function			'dashicons-images-alt2', // icon_url			3 // position		);	}	public function webcam_viewer_settings_create_admin_page() {		$this->webcam_viewer_settings_options = get_option( 'webcam_viewer_settings_option_name' ); ?>		<div class="wrap">			<h2><?php echo __("Webcam viewer settings", 'Webcam-viewer'); ?> FREE edition</h2>			<h3>This is the free edition and more of settings are disabled. Please visit our site to see what is inside the PRO edition</h3>			<a href="https://programmisitiweb.lacasettabio.it/en/Product/webcam-viewer-wordpress/"> WEB CAM VIEWER PRO edition</a>			<p><b> Shortcode is in PRO edition only </b></p>			<p><?php echo __("Please, before use do following settings", 'Webcam-viewer'); ?></p>			<p><b><?php echo __("Don't forget to set the url, where the images are saved by the webcam, on the widget", 'Webcam-viewer'); ?></b></p>			<p><?php echo __("Insert the url (example_path_to_webcam/frame.jpg) of the image if it is single or insert the path (example_path_to_webcam/example_webcam_folder/example_images_folder/) if the images are multiple. Usually the path is without domain but, sometimes, some servers want the url with domain: plese try both.", 'Webcam-viewer'); ?></p>			<p><?php echo __("Please, read the documentation here: https://programmisitiweb.lacasettabio.it/en/Product/webcam-viewer-wordpress/", 'Webcam-viewer'); ?></p>			<?php settings_errors(); ?>			<form method="post" action="options.php">				<?php					settings_fields( 'webcam_viewer_settings_option_group' );					do_settings_sections( 'webcam-viewer-settings-admin' );					submit_button();				?>			</form>		</div>	<?php }	public function webcam_viewer_settings_page_init() {		register_setting(			'webcam_viewer_settings_option_group', // option_group			'webcam_viewer_settings_option_name', // option_name			array( $this, 'webcam_viewer_settings_sanitize' ) // sanitize_callback		);		add_settings_section(			'webcam_viewer_settings_setting_section', // id			'Settings', // title			array( $this, 'webcam_viewer_settings_section_info' ), // callback			'webcam-viewer-settings-admin' // page		);		add_settings_field(			'usa_caption_0', // id			'Caption', // title			array( $this, 'usa_caption_0_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);			add_settings_field(			'testo_prima_della_data_1', // id			'Text before date', // title			array( $this, 'testo_prima_della_data_1_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'testo_prima_dell_ora_3', // id			'Text before time', // title			array( $this, 'testo_prima_dell_ora_3_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'ora_4', // id			'Hour', // title			array( $this, 'ora_4_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'formato_ora_5', // id			'Hour format', // title			array( $this, 'formato_ora_5_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'data_6', // id			'Date', // title			array( $this, 'data_6_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'formato_7', // id			'Format', // title			array( $this, 'formato_7_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'reverse_8', // id			'Color invert', // title			array( $this, 'reverse_8_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'singola_9', // id			'Shortcode - Single or sequenced image (slideshow) ->PRO edition', // title			array( $this, 'singola_9_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);				add_settings_field(			'width', // id			'Images dimension', // title			array( $this, 'width_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		/*add_settings_field(			'url_img_webcam_10', // id			'IMG webcam url', // title			array( $this, 'url_img_webcam_10_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);*/		add_settings_field(			'hourly_webcam_11', // id			'Hourly webcam', // title			array( $this, 'hourly_webcam_11_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'n_img_12', // id			'Images q.ty', // title			array( $this, 'n_img_12_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'timer_13', // id			'Timer', // title			array( $this, 'timer_13_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'stylecss_14', // id			'CSS style', // title			array( $this, 'stylecss_14_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'refresh_15', // id			'Refresh', // title			array( $this, 'refresh_15_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'fade_16', // id			'Fade', // title			array( $this, 'fade_16_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'zoom_20', // id			'Zoom', // title			array( $this, 'zoom_20_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'indicators_21', // id			'Progress bar indicator', // title			array( $this, 'indicators_21_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);				add_settings_field(			'bootstrap_17', // id			'Bootstrap', // title			array( $this, 'bootstrap_17_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'jquery_18', // id			'Jquery', // title			array( $this, 'jquery_18_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);		add_settings_field(			'slide_19', // id			'Slide', // title			array( $this, 'slide_19_callback' ), // callback			'webcam-viewer-settings-admin', // page			'webcam_viewer_settings_setting_section' // section		);	}	public function webcam_viewer_settings_sanitize($input) {		$sanitary_values = array();		if ( isset( $input['usa_caption_0'] ) ) {			$sanitary_values['usa_caption_0'] = $input['usa_caption_0'];		}		if ( isset( $input['testo_prima_della_data_1'] ) ) {			$sanitary_values['testo_prima_della_data_1'] = sanitize_text_field( $input['testo_prima_della_data_1'] );		}		if ( isset( $input['testo_prima_dell_ora_3'] ) ) {			$sanitary_values['testo_prima_dell_ora_3'] = sanitize_text_field( $input['testo_prima_dell_ora_3'] );		}		if ( isset( $input['ora_4'] ) ) {			$sanitary_values['ora_4'] = $input['ora_4'];		}		if ( isset( $input['formato_ora_5'] ) ) {			$sanitary_values['formato_ora_5'] = $input['formato_ora_5'];		}		if ( isset( $input['data_6'] ) ) {			$sanitary_values['data_6'] = $input['data_6'];		}		if ( isset( $input['formato_7'] ) ) {			$sanitary_values['formato_7'] = $input['formato_7'];		}		if ( isset( $input['reverse_8'] ) ) {			$sanitary_values['reverse_8'] = $input['reverse_8'];		}		if ( isset( $input['singola_9'] ) ) {			$sanitary_values['singola_9'] = $input['singola_9'];		}				if ( isset( $input['width'] ) ) {			$sanitary_values['width'] = $input['width'];		}		/*if ( isset( $input['url_img_webcam_10'] ) ) {			$sanitary_values['url_img_webcam_10'] = sanitize_text_field( $input['url_img_webcam_10'] );		}*/		if ( isset( $input['hourly_webcam_11'] ) ) {			$sanitary_values['hourly_webcam_11'] = $input['hourly_webcam_11'];		}		if ( isset( $input['n_img_12'] ) ) {			$sanitary_values['n_img_12'] = sanitize_text_field( $input['n_img_12'] );		}		if ( isset( $input['timer_13'] ) ) {			$sanitary_values['timer_13'] = sanitize_text_field( $input['timer_13'] );		}		if ( isset( $input['stylecss_14'] ) ) {			$sanitary_values['stylecss_14'] = $input['stylecss_14'];		}		if ( isset( $input['refresh_15'] ) ) {			$sanitary_values['refresh_15'] = sanitize_text_field( $input['refresh_15'] );		}		if ( isset( $input['fade_16'] ) ) {			$sanitary_values['fade_16'] = sanitize_text_field( $input['fade_16'] );		}		if ( isset( $input['bootstrap_17'] ) ) {			$sanitary_values['bootstrap_17'] = $input['bootstrap_17'];		}		if ( isset( $input['jquery_18'] ) ) {			$sanitary_values['jquery_18'] = $input['jquery_18'];		}		if ( isset( $input['slide_19'] ) ) {			$sanitary_values['slide_19'] = $input['slide_19'];		}		if ( isset( $input['zoom_20'] ) ) {			$sanitary_values['zoom_20'] = $input['zoom_20'];		}		if ( isset( $input['indicators_21'] ) ) {			$sanitary_values['indicators_21'] = $input['indicators_21'];		}		return $sanitary_values;	}	public function webcam_viewer_settings_section_info() {			}	public function usa_caption_0_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[usa_caption_0]" id="usa_caption_0" value="usa_caption_0" disabled %s> <label for="usa_caption_0"></label>',			( isset( $this->webcam_viewer_settings_options['usa_caption_0'] ) && $this->webcam_viewer_settings_options['usa_caption_0'] === 'usa_caption_0' ) ? 'checked' : ''		); echo __("Enable Caption: the date, time and text over the images", 'Webcam-viewer')," ->PRO edition";	}	public function testo_prima_della_data_1_callback() {		printf(			'<input class="regular-text" type="text" name="webcam_viewer_settings_option_name[testo_prima_della_data_1]" id="testo_prima_della_data_1" value="%s" disabled>',			isset( $this->webcam_viewer_settings_options['testo_prima_della_data_1'] ) ? esc_attr( $this->webcam_viewer_settings_options['testo_prima_della_data_1']) : ''		); echo __("Insert the text you want to show before the date", 'Webcam-viewer')," ->PRO edition";	}	public function testo_prima_dell_ora_3_callback() {		printf(			'<input class="regular-text" type="text" name="webcam_viewer_settings_option_name[testo_prima_dell_ora_3]" id="testo_prima_dell_ora_3" value="%s" disabled>',			isset( $this->webcam_viewer_settings_options['testo_prima_dell_ora_3'] ) ? esc_attr( $this->webcam_viewer_settings_options['testo_prima_dell_ora_3']) : ''		); echo __("Insert the text you want to show before the time", 'Webcam-viewer')," ->PRO edition";	}	public function ora_4_callback() {		?> <fieldset><?php $checked = ( isset( $this->webcam_viewer_settings_options['ora_4'] ) && $this->webcam_viewer_settings_options['ora_4'] === '0' ) ? 'checked' : '' ; ?>		<label for="ora_4-0"><input type="radio" name="webcam_viewer_settings_option_name[ora_4]" id="ora_4-0" value="0" checked="checked" <?php echo $checked; ?> disabled> <?php echo __("No", 'Webcam-viewer'); ?></label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['ora_4'] ) && $this->webcam_viewer_settings_options['ora_4'] === '1' ) ? 'checked' : '' ; ?>		<label for="ora_4-1"><input type="radio" name="webcam_viewer_settings_option_name[ora_4]" id="ora_4-1" value="1" <?php echo $checked; ?> disabled > <?php echo __("Yes", 'Webcam-viewer'); ?></label></fieldset> <?php		echo __("Choose if you want to show the time after the date", 'Webcam-viewer')," ->PRO edition";	} 	public function formato_ora_5_callback() {		?> <fieldset><?php $checked = ( isset( $this->webcam_viewer_settings_options['formato_ora_5'] ) && $this->webcam_viewer_settings_options['formato_ora_5'] === '0' ) ? 'checked' : '' ; ?>		<label for="formato_ora_5-0"><input type="radio" name="webcam_viewer_settings_option_name[formato_ora_5]" id="formato_ora_5-0" value="0" <?php echo $checked; ?> disabled> 12h</label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['formato_ora_5'] ) && $this->webcam_viewer_settings_options['formato_ora_5'] === '1' ) ? 'checked' : '' ; ?>		<label for="formato_ora_5-1"><input type="radio" name="webcam_viewer_settings_option_name[formato_ora_5]" id="formato_ora_5-1" value="1" <?php echo $checked; ?> disabled> 24h</label></fieldset> <?php		echo __("Choose if you want the time format in 12h or 24h", 'Webcam-viewer')," ->PRO edition";	} 	public function data_6_callback() {		?> <fieldset><?php $checked = ( isset( $this->webcam_viewer_settings_options['data_6'] ) && $this->webcam_viewer_settings_options['data_6'] === '0' ) ? 'checked' : '' ; ?>		<label for="data_6-0"><input type="radio" name="webcam_viewer_settings_option_name[data_6]" id="data_6-0" value="0" checked="checked" <?php echo $checked; ?> disabled> <?php echo __("No", 'Webcam-viewer'); ?></label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['data_6'] ) && $this->webcam_viewer_settings_options['data_6'] === '1' ) ? 'checked' : '' ; ?>		<label for="data_6-1"><input type="radio" name="webcam_viewer_settings_option_name[data_6]" id="data_6-1" value="1" <?php echo $checked; ?> disabled> <?php echo __("Yes", 'Webcam-viewer'); ?></label></fieldset> <?php		echo __("Choose if you want to show the date", 'Webcam-viewer')," ->PRO edition";	}	public function formato_7_callback() {		?> <select name="webcam_viewer_settings_option_name[formato_7]" id="formato_7" disabled>			<?php $selected = (isset( $this->webcam_viewer_settings_options['formato_7'] ) && $this->webcam_viewer_settings_options['formato_7'] === '0') ? 'selected' : '' ; ?>			<option value="0" <?php echo $selected; ?>>12-4-18</option>			<?php $selected = (isset( $this->webcam_viewer_settings_options['formato_7'] ) && $this->webcam_viewer_settings_options['formato_7'] === '1') ? 'selected' : '' ; ?>			<option value="1" <?php echo $selected; ?>>12 aprile 2018</option>			<?php $selected = (isset( $this->webcam_viewer_settings_options['formato_7'] ) && $this->webcam_viewer_settings_options['formato_7'] === '2') ? 'selected' : '' ; ?>			<option value="2" <?php echo $selected; ?>>Domenica 12 aprile 2018</option>			<?php $selected = (isset( $this->webcam_viewer_settings_options['formato_7'] ) && $this->webcam_viewer_settings_options['formato_7'] === '3') ? 'selected' : '' ; ?>			<option value="3" <?php echo $selected; ?>>2018-04-18</option>		</select> 		<?php echo __("Choose the date format you like to show", 'Webcam-viewer')," ->PRO edition"; 	}	public function reverse_8_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[reverse_8]" id="reverse_8" value="reverse_8" %s disabled> <label for="reverse_8"></label>',			( isset( $this->webcam_viewer_settings_options['reverse_8'] ) && $this->webcam_viewer_settings_options['reverse_8'] === 'reverse_8' ) ? 'checked' : ''		);		echo __("Inverts the colors of text and background", 'Webcam-viewer')," ->PRO edition";	}	public function singola_9_callback() {		?> <fieldset><?php $checked = ( isset( $this->webcam_viewer_settings_options['singola_9'] ) && $this->webcam_viewer_settings_options['singola_9'] === '0' ) ? 'checked' : '' ; ?>		<label for="singola_9-0"><input type="radio" name="webcam_viewer_settings_option_name[singola_9]" id="singola_9-0" value="0" <?php echo $checked; ?> disabled> <?php echo __("Multiple", 'Webcam-viewer')," ->PRO edition"; ?></label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['singola_9'] ) && $this->webcam_viewer_settings_options['singola_9'] === '1' ) ? 'checked' : '' ; ?>		<label for="singola_9-1"><input type="radio" name="webcam_viewer_settings_option_name[singola_9]" id="singola_9-1" value="1" checked="checked"<?php echo $checked; ?>> <?php echo __("Single", 'Webcam-viewer'); ?></label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['singola_9'] ) && $this->webcam_viewer_settings_options['singola_9'] === '2' ) ? 'checked' : '' ; ?>		<label for="singola_9-2"><input type="radio" name="webcam_viewer_settings_option_name[singola_9]" id="singola_9-2" value="2" <?php echo $checked; ?> disabled> <?php echo __("Rapid", 'Webcam-viewer')," ->PRO edition"; ?></label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['singola_9'] ) && $this->webcam_viewer_settings_options['singola_9'] === '3' ) ? 'checked' : '' ; ?>		<label for="singola_9-3"><input type="radio" name="webcam_viewer_settings_option_name[singola_9]" id="singola_9-3" value="3" <?php echo $checked; ?> disabled> <?php echo __("Bootstrap multiple", 'Webcam-viewer')," ->PRO edition"; ?></label></fieldset> <?php		echo __("Select how your webcam works for uploading the images. <br>SINGLE: set it if there is a single image with the same name always. <br>MULTIPLE: set it if there are multiple images into a folder. <br>RAPID: set it if there are multiple immages into a folder but you want to show only the last one with a rapid refresh. With this mode you can publish more modules with different webcams. <br>BOOTSTRAP: if there are multiple immages into a folder and you want to show them with a nice fade-in/out effect by Bootstrap."		, 'Webcam-viewer');	}		public function width_callback() {		printf(			'<input class="regular-text" type="text" name="webcam_viewer_settings_option_name[width]" id="width" value="%s" disabled>',			isset( $this->webcam_viewer_settings_options['width'] ) ? esc_attr( $this->webcam_viewer_settings_options['width']) : ''		);		echo __("If you want to change the dimension of the images write a number. The number is in % but you write only the number, without %. (It works only with short-code)", 'Webcam-viewer')," ->PRO edition";	}	public function hourly_webcam_11_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[hourly_webcam_11]" id="hourly_webcam_11" value="hourly_webcam_11" %s disabled> <label for="hourly_webcam_11"></label>',			( isset( $this->webcam_viewer_settings_options['hourly_webcam_11'] ) && $this->webcam_viewer_settings_options['hourly_webcam_11'] === 'hourly_webcam_11' ) ? 'checked' : ''		);		echo __("Check this option if your webcam upload the images in daily, hourly and minutely folder. This option fits for SNC-441FBIFE Burg-Wächter cam and similar.", 'Webcam-viewer')," ->PRO edition";	}	public function n_img_12_callback() {		printf(			'<input class="regular-text" type="text" name="webcam_viewer_settings_option_name[n_img_12]" id="n_img_12" value="0" disabled>',			isset( $this->webcam_viewer_settings_options['n_img_12'] ) ? esc_attr( $this->webcam_viewer_settings_options['n_img_12']) : ''		);		echo __("Enter the number of images to display (max 24). The last saved images will be shown.", 'Webcam-viewer')," ->PRO edition";	}	public function timer_13_callback() {		printf(			'<input class="regular-text" type="text" name="webcam_viewer_settings_option_name[timer_13]" id="timer_13" value="0" disabled>',			isset( $this->webcam_viewer_settings_options['timer_13'] ) ? esc_attr( $this->webcam_viewer_settings_options['timer_13']) : ''		);		echo __("The time in milliseconds between one image and the next", 'Webcam-viewer')," ->PRO edition";	}	public function stylecss_14_callback() {		?> <fieldset><?php $checked = ( isset( $this->webcam_viewer_settings_options['stylecss_14'] ) && $this->webcam_viewer_settings_options['stylecss_14'] === '0' ) ? 'checked' : '' ; ?>		<label for="stylecss_14-0"><input type="radio" name="webcam_viewer_settings_option_name[stylecss_14]" id="stylecss_14-0" value="0" <?php echo $checked; ?>> None</label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['stylecss_14'] ) && $this->webcam_viewer_settings_options['stylecss_14'] === '1' ) ? 'checked' : '' ; ?>		<label for="stylecss_14-1"><input type="radio" name="webcam_viewer_settings_option_name[stylecss_14]" id="stylecss_14-1" value="1" <?php echo $checked; ?>> Style 1</label><br>		<?php $checked = ( isset( $this->webcam_viewer_settings_options['stylecss_14'] ) && $this->webcam_viewer_settings_options['stylecss_14'] === '2' ) ? 'checked' : '' ; ?>		<label for="stylecss_14-2"><input type="radio" name="webcam_viewer_settings_option_name[stylecss_14]" id="stylecss_14-2" value="2" <?php echo $checked; ?>> Style 2</label></fieldset> <?php		echo __("Set if you like a CSS image style or not", 'Webcam-viewer');	}	public function refresh_15_callback() {		printf(			'<input class="regular-text" type="text" name="webcam_viewer_settings_option_name[refresh_15]" id="refresh_15" value="%s">',			isset( $this->webcam_viewer_settings_options['refresh_15'] ) ? esc_attr( $this->webcam_viewer_settings_options['refresh_15']) : ''		);		echo __("Set after how many seconds you want an auto page refresh. Set to 0 if you don't like it. It's not settable for RAPID.", 'Webcam-viewer');	}	public function fade_16_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[fade_16]" id="fade_16" value="fade_16" %s disabled> <label for="fade_16"></label>',			( isset( $this->webcam_viewer_settings_options['fade_16'] ) && $this->webcam_viewer_settings_options['fade_16'] === 'fade_16' ) ? 'checked' : ''		);		echo __("Check it if you like a fade in and fade out effect when the images are changed", 'Webcam-viewer')," ->PRO edition";	}	public function bootstrap_17_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[bootstrap_17]" id="bootstrap_17" value="bootstrap_17" %s disabled> <label for="bootstrap_17"></label>',			( isset( $this->webcam_viewer_settings_options['bootstrap_17'] ) && $this->webcam_viewer_settings_options['bootstrap_17'] === 'bootstrap_17' ) ? 'checked' : ''		);		echo __("The Bootstrap mode uses the Jquery library too and that could create conflict with other component of your site. <b>This is not a bug.</b> If you are not be able to fix the conflict, please, don't use Bootstrap mode!", 'Webcam-viewer')," ->PRO edition";	}	public function jquery_18_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[jquery_18]" id="jquery_18" value="jquery_18" %s disabled> <label for="jquery_18"></label>',			( isset( $this->webcam_viewer_settings_options['jquery_18'] ) && $this->webcam_viewer_settings_options['jquery_18'] === 'jquery_18' ) ? 'checked' : ''		);		echo __("Load Jquery if it is not loaded jet. Jquery is required if you select BOOTSTRAP on image type.", 'Webcam-viewer')," ->PRO edition";	}	public function slide_19_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[slide_19]" id="slide_19" value="slide_19" %s disabled> <label for="slide_19"></label>',			( isset( $this->webcam_viewer_settings_options['slide_19'] ) && $this->webcam_viewer_settings_options['slide_19'] === 'slide_19' ) ? 'checked' : ''		);		echo __("Bootstrap.If it's setted, the transition of the images will be by a scroll from right to left. The fade effect will be disabled.", 'Webcam-viewer')," ->PRO edition";	}	public function zoom_20_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[zoom_20]" id="zoom_20" value="zoom_20" %s disabled> <label for="zoom_20"></label>',			( isset( $this->webcam_viewer_settings_options['zoom_20'] ) && $this->webcam_viewer_settings_options['zoom_20'] === 'zoom_20' ) ? 'checked' : ''		);		echo __("If it's setted, you enable an auto zoom whit cursor hover the image", 'Webcam-viewer')," ->PRO edition";	}	public function indicators_21_callback() {		printf(			'<input type="checkbox" name="webcam_viewer_settings_option_name[indicators_21]" id="indicators_21" value="indicators_21" %s disabled> <label for="indicators_21"></label>',			( isset( $this->webcam_viewer_settings_options['indicators_21'] ) && $this->webcam_viewer_settings_options['indicators_21'] === 'indicators_21' ) ? 'checked' : ''		);		echo __("If it's setted, you enable a progress indicator bar about the image", 'Webcam-viewer')," ->PRO edition";	}}/*  * Retrieve this value with: * $webcam_viewer_settings_options = get_option( 'webcam_viewer_settings_option_name' ); // Array of All Options * $usa_caption_0 = $webcam_viewer_settings_options['usa_caption_0']; // usa_caption * $testo_prima_della_data_1 = $webcam_viewer_settings_options['testo_prima_della_data_1']; // testo_prima_della_data * $testo_prima_dell_ora_3 = $webcam_viewer_settings_options['testo_prima_dell_ora_3']; // testo_prima_dell_ora * $ora_4 = $webcam_viewer_settings_options['ora_4']; // ora * $formato_ora_5 = $webcam_viewer_settings_options['formato_ora_5']; // formato_ora * $data_6 = $webcam_viewer_settings_options['data_6']; // data * $formato_7 = $webcam_viewer_settings_options['formato_7']; // formato * $reverse_8 = $webcam_viewer_settings_options['reverse_8']; // reverse * $singola_9 = $webcam_viewer_settings_options['singola_9']; // singola * $url_img_webcam_10 = $webcam_viewer_settings_options['url_img_webcam_10']; // url_img_webcam * $hourly_webcam_11 = $webcam_viewer_settings_options['hourly_webcam_11']; // hourly_webcam * $n_img_12 = $webcam_viewer_settings_options['n_img_12']; // n_img * $timer_13 = $webcam_viewer_settings_options['timer_13']; // timer * $stylecss_14 = $webcam_viewer_settings_options['stylecss_14']; // stylecss * $refresh_15 = $webcam_viewer_settings_options['refresh_15']; // refresh * $fade_16 = $webcam_viewer_settings_options['fade_16']; // fade * $bootstrap_17 = $webcam_viewer_settings_options['bootstrap_17']; // bootstrap * $jquery_18 = $webcam_viewer_settings_options['jquery_18']; // jquery * $slide_19 = $webcam_viewer_settings_options['slide_19']; // slide * $zoom_20 = $webcam_viewer_settings_options['zoom_20']; // zoom * $indicators_21 = $webcam_viewer_settings_options['indicators_21']; // indicators */ ?>